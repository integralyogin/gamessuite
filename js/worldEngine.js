// js/WorldEngine.js
// A tool for generating boilerplate for new game modules.

const WorldEngine = {
    id: 'WorldEngine',
    container: null,
    successCallback: null,
    failureCallback: null,
    sharedData: null,

    init: function(container, successCallback, failureCallback, sharedData) {
        this.container = container;
        this.successCallback = successCallback;
        this.failureCallback = failureCallback;
        this.sharedData = sharedData;

        console.log("WorldEngine: Initializing.");
        this.render();
        this.applyStyles();
    },

    render: function() {
        this.container.innerHTML = `
            <div class="world-engine-container">
                <div class="we-header">
                    <h1>World Engine</h1>
                    <p>Generate a new game module file.</p>
                    <button id="we-main-exit-btn" class="we-main-exit-btn">Exit Engine</button>
                </div>
                <div class="we-form">
                    <label for="we-module-name">New Game Module Name:</label>
                    <input type="text" id="we-module-name" placeholder="e.g., MountainGame" />
                    <button id="we-generate-btn">Generate Code</button>
                </div>
                <div id="we-output" class="we-output-container" style="display:none;">
                    <h4>Generated Code for <code id="we-filename-display"></code></h4>
                    <div class="we-code-wrapper">
                        <pre><code id="we-generated-code"></code></pre>
                        <button id="we-copy-btn">Copy to Clipboard</button>
                    </div>
                    <h4>Next Steps</h4>
                    <ol>
                        <li>Create a new file in your <code>/js/</code> directory named <code id="we-filename-2"></code>.</li>
                        <li>Paste the copied code into the new file and save it.</li>
                        <li>Open your main <code>index.html</code> file.</li>
                        <li>Add the following script tag with your other game scripts:<br>
                            <pre><code id="we-script-tag"></code></pre>
                        </li>
                        <li>Open your <code>town_layout.json</code> file.</li>
                        <li>Find the place you want to link (e.g., "The Mountain") and set its <code>"targetGameId"</code> property to <code id="we-modulename-1"></code>.
                            <pre><code id="we-json-example"></code></pre>
                        </li>
                        <li>Refresh the application. The location should now be enterable.</li>
                    </ol>
                </div>
            </div>
        `;

        document.getElementById('we-generate-btn').onclick = () => this.handleGenerate();
        document.getElementById('we-main-exit-btn').onclick = () => this.successCallback({ message: "Exited WorldEngine." });
    },

    handleGenerate: function() {
        const inputElement = document.getElementById('we-module-name');
        let moduleName = inputElement.value.trim();

        const giveErrorFeedback = (el) => {
            el.style.outline = '2px solid #e74c3c';
            setTimeout(() => { el.style.outline = ''; }, 2500);
        };
        
        if (!moduleName) {
            console.error("WorldEngine: Module name cannot be empty.");
            giveErrorFeedback(inputElement);
            return;
        }

        if (!/^[a-zA-Z_$][a-zA-Z0-9_$]*$/.test(moduleName)) {
            console.error("WorldEngine: Invalid module name.");
            giveErrorFeedback(inputElement);
            return;
        }

        const fileName = `${moduleName}.js`;
        const fileContent = this.createTemplate(moduleName);
        
        // Populate the output area instead of downloading
        document.getElementById('we-generated-code').textContent = fileContent;
        document.getElementById('we-filename-display').textContent = fileName;
        document.getElementById('we-filename-2').textContent = fileName;
        document.getElementById('we-script-tag').textContent = `<script src="js/${fileName}"></script>`;
        document.getElementById('we-modulename-1').textContent = `"${moduleName}"`;
        document.getElementById('we-json-example').textContent = `{\n  "id": "mountain",\n  "name": "The Mountain",\n  "targetGameId": "${moduleName}",\n  ...\n}`;

        document.getElementById('we-copy-btn').onclick = () => this.copyCodeToClipboard();

        // Show the output area
        document.querySelector('.we-form').style.display = 'none';
        document.getElementById('we-output').style.display = 'block';
    },

    createTemplate: function(moduleName) {
        return `// js/${moduleName}.js
// Generated by the WorldEngine

const ${moduleName} = {
    id: '${moduleName}',
    container: null,
    successCallback: null,
    failureCallback: null,
    sharedData: null,

    init: function(container, successCallback, failureCallback, sharedData) {
        this.container = container;
        this.successCallback = successCallback;
        this.failureCallback = failureCallback;
        this.sharedData = sharedData;

        console.log(\`${moduleName}: Initializing.\`);
        this.render();
    },

    render: function() {
        this.container.innerHTML = \`
            <div style="padding: 20px; text-align: center; color: #333; background-color: #f0f0f0; height: 100%; display: flex; flex-direction: column; justify-content: center; align-items: center; box-sizing: border-box;">
                <h1>Welcome to ${moduleName}</h1>
                <p>This area is under construction.</p>
                <p style="font-size: 0.8em; color: #666;">Data from Hub: \${this.escapeHtml(JSON.stringify(this.sharedData, null, 2))}</p>
                <button id="${moduleName}-exit-btn" style="padding: 10px 20px; font-size: 16px; cursor: pointer; margin-top: 20px;">Exit</button>
            </div>
        \`;

        document.getElementById(\`${moduleName}-exit-btn\`).onclick = () => {
            // You can pass data back to the hub if needed, e.g., { questCompleted: 'mountain_pass' }
            this.successCallback({ message: \`Returned from ${moduleName}\` });
        };
    },
    
    escapeHtml: function(unsafe) {
        if (unsafe == null) return "";
        return String(unsafe)
             .replace(/&/g, "&amp;")
             .replace(/</g, "&lt;")
             .replace(/>/g, "&gt;")
             .replace(/"/g, "&quot;")
             .replace(/'/g, "&#039;");
    },

    destroy: function() {
        console.log(\`${moduleName}: Destroying.\`);
        if (this.container) {
            this.container.innerHTML = '';
        }
    }
};
`;
    },

    copyCodeToClipboard: function() {
        const codeElement = document.getElementById('we-generated-code');
        const textToCopy = codeElement.textContent;

        const textArea = document.createElement('textarea');
        textArea.value = textToCopy;
        textArea.style.position = 'fixed'; 
        textArea.style.left = '-9999px';
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();

        try {
            document.execCommand('copy');
            const copyBtn = document.getElementById('we-copy-btn');
            copyBtn.textContent = 'Copied!';
            setTimeout(() => { copyBtn.textContent = 'Copy to Clipboard'; }, 2000);
        } catch (err) {
            console.error('Fallback: Oops, unable to copy', err);
        }

        document.body.removeChild(textArea);
    },

    applyStyles: function() {
        let style = document.getElementById('worldEngineStyle');
        if (!style) {
            style = document.createElement('style');
            style.id = 'worldEngineStyle';
            document.head.appendChild(style);
        }
        style.textContent = `
            .world-engine-container { padding: 25px; background-color: #ecf0f1; color: #2c3e50; font-family: sans-serif; height: 100%; overflow-y: auto; box-sizing: border-box; }
            .we-header { position: relative; text-align: center; border-bottom: 2px solid #bdc3c7; padding-bottom: 15px; margin-bottom: 20px; }
            .we-header h1 { margin: 0; color: #34495e; }
            .we-header p { margin: 5px 0 0; color: #7f8c8d; }
            .we-main-exit-btn { position: absolute; top: 0; right: 0; padding: 8px 12px; background: #c0392b; color: white; border: none; border-radius: 4px; cursor: pointer; }
            .we-form { max-width: 500px; margin: 0 auto; }
            .we-form label { display: block; font-weight: bold; margin-bottom: 8px; }
            .we-form input { width: 100%; padding: 12px; font-size: 16px; border: 1px solid #bdc3c7; border-radius: 4px; margin-bottom: 15px; box-sizing: border-box; transition: outline 0.2s; }
            .we-form button { width: 100%; padding: 15px; font-size: 18px; font-weight: bold; color: white; background-color: #27ae60; border: none; border-radius: 5px; cursor: pointer; transition: background-color 0.2s; }
            .we-form button:hover { background-color: #229954; }
            .we-output-container { margin-top: 30px; padding: 20px; background-color: #e8f6ef; border: 1px solid #d0e9dd; border-radius: 5px; }
            .we-output-container h4 { margin: 0 0 15px; font-size: 20px; color: #1e8449; }
            .we-output-container p, .we-output-container li { line-height: 1.6; color: #34495e; }
            .we-output-container ol { padding-left: 25px; }
            .we-output-container li { margin-bottom: 12px; }
            .we-code-wrapper { position: relative; margin-bottom: 20px; }
            #we-copy-btn { position: absolute; top: 10px; right: 10px; padding: 8px 12px; background: #3498db; color: white; border: none; border-radius: 4px; cursor: pointer; }
            #we-generated-code { display: block; background-color: #2c3e50; color: #f2f2f2; padding: 20px; border-radius: 5px; white-space: pre-wrap; word-wrap: break-word; font-family: monospace; max-height: 400px; overflow-y: auto; }
            .we-output-container code { background-color: #d6dbdf; padding: 3px 6px; border-radius: 4px; font-family: monospace; color: #2c3e50; }
            .we-output-container pre { background-color: #2c3e50; color: #f2f2f2; padding: 15px; border-radius: 5px; white-space: pre-wrap; word-wrap: break-word; margin-top: 8px; }
            .we-output-container pre code { background: none; color: white; padding: 0; }
        `;
    },

    destroy: function() {
        console.log("WorldEngine: Destroying.");
        if (this.container) {
            this.container.innerHTML = '';
        }
    }
};

