{
"Emergent Gameplay": { "quote": "Systems that interact to create unplanned player experiences. The physics engine in Breath of the Wild enables creative combat and puzzle solutions not explicitly designed." },
"Player Agency": { "quote": "Maximum freedom and minimal restrictions on play style. No Man's Sky allows players to focus on exploration, combat, trading, or base-building according to preference." },
"System Interactions": { "quote": "How game elements combine in meaningful ways. The chemistry system in Breath of the Wild creates opportunities when fire, water, electricity, and materials interact." },
"Tool Versatility": { "quote": "Designing multi-purpose instruments with varied applications. The gravity gun in Half-Life 2 serves as a puzzle-solver, weapon, and environmental interaction device." },
"Procedural Generation": { "quote": "Algorithmically creating content for variety and replayability. Minecraft generates unique worlds each time, encouraging exploration and adaptation." },
"Creative Expression": { "quote": "Enabling players to build, modify, and personalize the game world. Planet Coaster provides detailed tools for designing custom theme parks that express player creativity." },
"Open Design": { "quote": "Non-linear progression allowing multiple pathways through content. Subnautica allows players to explore its underwater world at their own pace and direction." },
"Playful Discovery": { "quote": "Learning game systems through experimentation rather than instruction. Factorio encourages players to discover efficient factory designs through iteration." },
"Systemic Depth": { "quote": "Complex, interconnected systems that reward mastery. Dwarf Fortress's detailed simulation creates unexpected scenarios through system interactions." },
"Generative Complexity": { "quote": "Simple rules producing complex outcomes. Conway's Game of Life principles underpin emergent behaviors in simulation games." },
"Physics Sandbox": { "quote": "Realistic or stylized physical laws that create gameplay opportunities. Teardown's fully destructible voxel environments enable creative approaches to heists." },
"Environmental Manipulation": { "quote": "The ability to change, destroy, or create within game spaces. Red Faction: Guerrilla's destruction system turns buildings into both obstacles and weapons." },
"Toy-like Interaction": { "quote": "Playful engagement without explicit goals. Garry's Mod provides physics objects and tools purely for experimental enjoyment." },
"Simulation Fidelity": { "quote": "The degree of realism in system behavior. Kerbal Space Program uses realistic orbital mechanics that teach actual aerospace principles." },
"Resource Management": { "quote": "Gathering and allocating materials within sandbox constraints. Terraria balances creative building with resource collection and progression." },
"Tool Progression": { "quote": "Expanding player capabilities through new or upgraded tools. Minecraft's tool tiers gate access to materials while expanding efficiency." },
"Rule Flexibility": { "quote": "Allowing players to modify game parameters and rules. Cities: Skylines supports extensive modding that can fundamentally change gameplay mechanics." },
"Creation Sharing": { "quote": "Systems for distributing player-created content. Dreams provides robust tools for creating and sharing games, art, and music with the community." },
"Boundary Testing": { "quote": "Encouraging players to experiment with system limits. Just Cause series rewards creative approaches to destruction and physics manipulation." },
"Persistence": { "quote": "Long-term consequences for player actions in the game world. Satisfactory's factories remain operational, creating a sense of ownership and impact." },
"Dynamic Ecosystems": { "quote": "Simulated environments that respond to changing conditions. Legend of Zelda: Breath of the Wild's weather affects climbing, electricity, and fire propagation." },
"Intrinsic Motivation": { "quote": "Player-driven goals rather than prescribed objectives. Minecraft relies on curiosity and creativity rather than explicit mission structures." },
"Tool Accessibility": { "quote": "Intuitive design of creative implements. Super Mario Maker simplifies level design into accessible tools that still enable complex creations." },
"Sandbox Constraints": { "quote": "Meaningful limitations that create interesting decisions. Oxygen Not Included's resource constraints create compelling management challenges." },
"Systemic Narrative": { "quote": "Stories that emerge from system interactions rather than scripted events. RimWorld generates unique colony narratives through character traits and events." },
"Composability": { "quote": "Building complex structures from simple components. The redstone system in Minecraft enables players to create functioning computers from basic logic gates." },
"Experimentation Safety": { "quote": "Low-consequence environments for testing ideas. Creative mode in Minecraft removes survival pressures to focus on building and testing." },
"Tool Discoverability": { "quote": "Revealing functionality through design rather than explicit instruction. Portal's portal gun mechanics are intuitive through visual and audio feedback." },
"Playful Subversion": { "quote": "Supporting unexpected uses of game systems. Rocket League emerged from players discovering fun in Unreal Tournament's physics engine." },
"Simulation Boundaries": { "quote": "The limits of system interactions that define the sandbox. The Sims balances realistic human needs with abstracted social interactions for playability." }
}
