{
"Relations": { "quote": "The fundamental building block representing a table with rows and columns. A relation is a set of tuples that have the same attributes." },
"Attributes": { "quote": "The named columns of a relation that define the properties of entities. Each attribute has a domain that specifies the set of allowable values." },
"Tuples": { "quote": "The rows of a relation that represent individual records or instances. Each tuple contains exactly one value for each attribute in the relation." },
"Primary Key": { "quote": "A minimal set of attributes that uniquely identifies each tuple in a relation. The CustomerID attribute uniquely identifies each customer record." },
"Foreign Key": { "quote": "An attribute or set of attributes in one relation that refers to the primary key of another relation. OrderID in the OrderItems table references the primary key in the Orders table." },
"Normalization": { "quote": "The process of organizing data to minimize redundancy. Third normal form (3NF) requires that all attributes be dependent only on the primary key." },
"Integrity Constraints": { "quote": "Rules that maintain the accuracy and consistency of data. Domain constraints, entity integrity, and referential integrity preserve data validity." },
"Domain": { "quote": "The set of allowable values for an attribute. A date attribute's domain includes valid dates but excludes non-date values." },
"Entity Integrity": { "quote": "Requires that no primary key attribute can be null. Every row must be uniquely identifiable." },
"Referential Integrity": { "quote": "Requires that foreign key values must match an existing primary key value or be null. An order can't reference a non-existent customer." },
"Schema": { "quote": "The logical structure that defines the organization of a database. The schema specifies relations, attributes, and relationships between tables." },
"Join Operation": { "quote": "Combines related tuples from different relations. The INNER JOIN operation connects Customer and Order data based on matching CustomerID values." },
"Selection Operation": { "quote": "Retrieves tuples that satisfy a specified condition. The WHERE clause filters orders placed after a certain date." },
"Projection Operation": { "quote": "Creates a new relation with a subset of attributes from an existing relation. SELECT firstName, lastName FROM Employees returns only name columns." },
"Relational Algebra": { "quote": "A procedural query language providing operations to manipulate relations. Operations include select, project, join, union, intersection, and difference." },
"Relational Calculus": { "quote": "A declarative query language that specifies what data to retrieve without specifying how to retrieve it. The basis for SQL's declarative nature." },
"Data Independence": { "quote": "Changes to the physical storage structure do not require changes to the logical data structure. Applications remain unaffected when storage methods change." },
"Transaction": { "quote": "A logical unit of work that must be entirely completed or entirely aborted. Bank transfers must either fully complete or fully roll back to maintain consistency." },
"ACID Properties": { "quote": "Atomicity, Consistency, Isolation, and Durability ensure reliable transaction processing. All or nothing execution, state validity, concurrent operation, and permanent effects." },
"Query Optimization": { "quote": "The process of selecting the most efficient execution plan for a query. The query optimizer determines the best join order and access methods." },
"Index": { "quote": "A data structure that improves the speed of data retrieval operations. B-tree indexes allow rapid location of rows by key value." },
"View": { "quote": "A virtual relation defined as a stored query. Views can simplify complex queries and restrict access to sensitive data." },
"Stored Procedure": { "quote": "A prepared SQL code that can be saved and reused. Procedures encapsulate business logic and improve security and performance." },
"Trigger": { "quote": "Procedural code that automatically executes in response to certain events. An insert trigger can enforce business rules when new data is added." },
"Cardinality": { "quote": "The numerical relationship between two related entities. One-to-many relationships connect one customer to multiple orders." },
"Entity-Relationship Model": { "quote": "A conceptual representation of data structures using entities, attributes, and relationships. ER diagrams visually represent database design." },
"Functional Dependency": { "quote": "When the value of one attribute determines the value of another. If A â†’ B, then knowing A's value tells us B's value." },
"Candidate Key": { "quote": "A minimal set of attributes that could serve as the primary key. Email and social security number are both candidate keys for a person." },
"Denormalization": { "quote": "The process of adding redundant data to improve query performance. Summary tables trade storage for faster access to aggregated data." },
"Data Warehousing": { "quote": "Relational systems optimized for analysis rather than transaction processing. Star schemas organize data into fact and dimension tables for analytical queries." }
}
