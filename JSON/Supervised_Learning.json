{
"Supervised Learning": {
    "short_description": "A machine learning paradigm where models learn from labeled examples, mapping input features to known output values through iterative training and error correction."
},
"Classification": {
    "short_description": "A supervised learning task where the model predicts discrete categories or classes from input features, learning decision boundaries between different groups."
},
"Regression": {
    "short_description": "A supervised learning task where the model predicts continuous numerical values from input features, learning to approximate underlying relationships in data."
},
"Model": {
    "short_description": "A mathematical representation learned from training data that captures patterns and relationships between inputs and outputs for making predictions."
},
"Loss Function": {
    "short_description": "A mathematical measure of prediction error that quantifies the difference between model outputs and true labels, guiding the learning process."
},
"Gradient Descent": {
    "short_description": "An optimization algorithm that iteratively adjusts model parameters to minimize the loss function by following the gradient of errors."
},
"Backpropagation": {
    "short_description": "The algorithmic process of computing gradients through a neural network, propagating errors backward to update weights and improve predictions."
},
"Weights": {
    "short_description": "Learnable parameters within a model that determine the strength of connections between features and predictions, adjusted during training."
},
"Bias Term": {
    "short_description": "An additional learnable parameter that allows models to represent offset values in predictions, independent of input features."
},
"Learning Rate": {
    "short_description": "A hyperparameter controlling the size of parameter updates during training, balancing between convergence speed and stability."
},
"Epoch": {
    "short_description": "One complete pass through the entire training dataset, consisting of multiple iterations of forward passes and parameter updates."
},
"Batch": {
    "short_description": "A subset of training examples processed together for parameter updates, optimizing computation and providing stable gradient estimates."
},
"Overfitting": {
    "short_description": "A condition where a model learns to memorize training data rather than generalize, performing well on training data but poorly on new examples."
},
"Underfitting": {
    "short_description": "A condition where a model fails to capture important patterns in the training data, resulting in poor performance on both training and new examples."
},
"Regularization": {
    "short_description": "Techniques to prevent overfitting by adding constraints or penalties to model complexity, encouraging simpler and more generalizable solutions."
},
"Cross-Entropy Loss": {
    "short_description": "A loss function commonly used in classification tasks that measures the difference between predicted probability distributions and true labels."
},
"Mean Squared Error": {
    "short_description": "A loss function commonly used in regression tasks that measures the average squared difference between predicted and true values."
},
"Prediction": {
    "short_description": "The output generated by a trained model for new input data, representing the model's learned mapping from features to target values."
},
"Inference": {
    "short_description": "The process of using a trained model to make predictions on new data, applying the learned patterns to unseen examples."
},
"Model Evaluation": {
    "short_description": "The assessment of model performance using metrics and validation data to measure prediction accuracy and generalization ability."
},
"Accuracy": {
    "short_description": "A metric measuring the proportion of correct predictions in classification tasks, indicating overall model performance."
},
"Precision": {
    "short_description": "A metric measuring the proportion of true positive predictions among all positive predictions, indicating model specificity."
},
"Recall": {
    "short_description": "A metric measuring the proportion of true positive predictions among all actual positive examples, indicating model sensitivity."
},
"F1 Score": {
    "short_description": "A metric combining precision and recall into a single value, providing a balanced measure of model performance for imbalanced classes."
},
"ROC Curve": {
    "short_description": "A graphical plot illustrating classification model performance across different threshold settings, showing the trade-off between sensitivity and specificity."
},
"Learning Curve": {
    "short_description": "A plot showing model performance on training and validation data as a function of training size, helping diagnose learning dynamics."
},
"Feature Importance": {
    "short_description": "A measure of each input feature's contribution to model predictions, helping understand and interpret model behavior."
},
"Early Stopping": {
    "short_description": "A technique to prevent overfitting by halting training when performance on validation data stops improving, preserving model generalization."
},
"Transfer Learning": {
    "short_description": "The practice of using a pre-trained model as a starting point for a new task, leveraging knowledge learned from related problems."
},
"Fine-tuning": {
    "short_description": "The process of adjusting a pre-trained model's parameters using task-specific data to optimize performance for a particular application."
},
"Hyperparameter": {
    "short_description": "Configuration variables that control the learning process and model architecture, requiring optimization outside the main training procedure."
},
"Model Architecture": {
    "short_description": "The structural design of a machine learning model, defining the arrangement and connectivity of layers and computational units."
},
"Decision Boundary": {
    "short_description": "The surface learned by a classification model that separates different classes in the feature space, determining prediction regions."
},
"Confidence Score": {
    "short_description": "A numerical value indicating the model's certainty in its predictions, often expressed as probabilities for classification tasks."
},
"Error Analysis": {
    "short_description": "The systematic examination of model mistakes to understand patterns in incorrect predictions and identify areas for improvement."
}
}
