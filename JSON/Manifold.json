{
  "Manifold Hypothesis": { "quote": "High-dimensional data often lies on a low-dimensional manifold embedded in ambient space. (Fefferman et al., 2016)" },
  "Dimensionality Reduction": { "quote": "PCA: Maximize variance via eigendecomposition of covariance matrix Σ = XᵀX." },
  "Nonlinear Manifold Learning": { "quote": "Isomap: Approximate geodesic distances with k-NN graphs (Tenenbaum et al., 2000)." },
  "Local Linear Embedding (LLE)": { "quote": "Reconstruct points as linear combinations of neighbors: min‖x_i - ΣW_ijx_j‖²." },
  "Laplacian Eigenmaps": { "quote": "Embed via graph Laplacian: L = D - W, solving Lv = λDv (Belkin & Niyogi, 2003)." },
  "t-SNE": { "quote": "Minimize KL divergence between high-dim (P) and low-dim (Q) similarities: KL(P‖Q) = Σp_ij log(p_ij/q_ij)." },
  "UMAP": { "quote": "Preserve topological structure via fuzzy simplicial sets (McInnes et al., 2018)." },
  "Geodesic Distance": { "quote": "Shortest path on the manifold: d_geo(x_i, x_j) ≈ Σ edge weights in k-NN graph." },
  "Kernel PCA": { "quote": "Nonlinear PCA via kernel trick: K(x_i, x_j) = Φ(x_i)·Φ(x_j)." },
  "Riemannian Manifold": { "quote": "Smooth manifold with inner product ⟨·,·⟩_p on tangent space T_pM." },
  "Curse of Dimensionality": { "quote": "Manifold learning mitigates sparsity: Effective dimension ≪ ambient dimension." },
  "Manifold Regularization": { "quote": "Incorporate manifold structure into loss: Ω(f) = ‖f‖_I² (Belkin et al., 2006)." },
  "Autoencoders (Manifold)": { "quote": "Learn latent manifold via bottleneck: min‖X - decoder(encoder(X))‖²." },
  "Tangent Space": { "quote": "Local linear approximation: T_pM ≈ {v | v = Σα_iφ_i}, where φ_i are basis vectors." },
  "Diffusion Maps": { "quote": "Embed using Markov matrix eigenvalues: p_t(x, y) = Σ e^{-λ_i t}ψ_i(x)φ_i(y)." },
  "Sparse Manifolds": { "quote": "Data lies on union of low-dim manifolds: M = ∪_{k=1}^K M_k (e.g., motion capture data)." },
  "Topological Data Analysis": { "quote": "Persistent homology tracks holes/betti numbers across scales." },
  "Manifold Alignment": { "quote": "Align datasets via correspondence: min‖f(X) - g(Y)‖² (e.g., fMRI & EEG)." },
  "Density Estimation on Manifolds": { "quote": "KDE adapted to manifold geometry: ̂f(x) = (1/n) Σ K(d_geo(x, x_i))." },
  "Manifold Clustering": { "quote": "Spectral clustering: Partition graph Laplacian eigenvectors (Ng et al., 2002)." },
  "Manifold Validation": { "quote": "Trustworthiness metric: T(k) = 1 - (2/nk(2n - 3k - 1)) Σ|R(x_i, k) - R̂(x_i, k)|." },
  "Dynamic Manifolds": { "quote": "Time-varying embeddings: M_t = {x | x = f_t(z), z ∈ latent space}." },
  "Grassmann Manifold": { "quote": "Subspaces as points: Gr(k, n) = {k-dim subspaces of ℝ^n} (e.g., motion subspaces)." },
  "Applications (Manifold)": { "quote": "Facial recognition: Images of faces lie on a 3D pose + lighting manifold." }
}
