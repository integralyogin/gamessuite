{
"Core Mechanics": { "quote": "Fundamental interactions that drive moment-to-moment gameplay. The 'jump' in platformers defines both basic movement and skill expression." },
"Systems Thinking": { "quote": "Viewing games as interconnected networks of rules and elements. Breath of the Wild's chemistry system creates interactions between fire, water, electricity, and metal." },
"Feedback Loops": { "quote": "Self-reinforcing or self-limiting systems that affect game balance. The 'rubber-banding' in Mario Kart helps trailing players catch up through better items." },
"Positive Feedback": { "quote": "Mechanics that amplify player advantage over time. In Civilization, early expansion leads to more resources, enabling faster growth and technological development." },
"Negative Feedback": { "quote": "Mechanics that limit runaway success and keep games competitive. Battle royale games use shrinking play areas to force confrontation regardless of early success." },
"State Machines": { "quote": "Defined conditions that govern object behavior and transitions. Enemy AI in Doom uses distinct states like patrolling, investigating, and attacking." },
"Emergence": { "quote": "Complex scenarios arising from simple rule interactions. Chess has relatively simple movement rules that create virtually limitless strategic depth." },
"Economy Design": { "quote": "Managing resource creation, conversion, and expenditure. Settlers of Catan creates interesting decisions through its resource trading system." },
"Faucets and Drains": { "quote": "Systems that introduce resources and remove them from the game. Monster Hunter's crafting system sources materials from hunting (faucet) and consumes them for equipment (drain)." },
"Resource Loops": { "quote": "Cycles of gathering, converting, and spending resources. Factorio's production chains transform raw materials into increasingly complex components." },
"Risk/Reward": { "quote": "Balancing potential gains against potential losses. Hades presents players with choices between different rewards, each suited to different playstyles." },
"Decision Trees": { "quote": "Branching choices with different outcomes and consequences. Strategy games like XCOM present tactical options with distinct risk profiles." },
"Information Design": { "quote": "How game information is presented, hidden, or revealed. Poker's hidden cards create tension and enable bluffing strategies." },
"Perfect vs. Imperfect Information": { "quote": "Whether players have complete knowledge of game state. Chess presents perfect information while Stratego hides piece identities." },
"Transitive vs. Intransitive Design": { "quote": "How game elements compare in power. Rock-Paper-Scissors uses intransitivity where no option is universally superior." },
"Balancing Mechanisms": { "quote": "Methods for maintaining equilibrium between game elements. Trading card games use rarity and card rotation to manage power levels." },
"Probability Design": { "quote": "Using randomness to create uncertainty and variety. Roguelikes use procedural generation to create unique playthroughs." },
"Deterministic vs. Non-deterministic": { "quote": "Whether identical inputs always produce identical outputs. Fighting games are largely deterministic to reward skill mastery." },
"System Layers": { "quote": "How game systems interact hierarchically. In RPGs, combat mechanics sit within broader exploration systems, which exist within narrative frameworks." },
"Core Loops": { "quote": "The primary repetitive activity sequence in gameplay. Destiny's loop involves combat, collecting loot, improving character, then facing tougher combat." },
"Progression Systems": { "quote": "How players advance in power or capability. God of War uses ability unlocks to both strengthen the player and open new areas for exploration." },
"Meta-Game Systems": { "quote": "Elements that persist beyond individual play sessions. Fortnite's seasonal structure creates an evolving context for individual matches." },
"Asymmetry": { "quote": "Deliberate imbalance between player capabilities. Among Us creates tension through fundamentally different goals for impostors and crewmates." },
"Combinatorial Systems": { "quote": "Elements that can be combined to create new effects. The Legend of Zelda: Breath of the Wild allows creative solutions through physics and chemistry interactions." },
"System Boundaries": { "quote": "Defining what is possible within the game world. Portal establishes specific rules for its teleportation mechanics to create consistent puzzle design." },
"Game State": { "quote": "The complete information describing the game at any moment. Chess notation captures the entire game state in a simple format." },
"Possibility Space": { "quote": "The range of potential states and outcomes a game can produce. Minecraft's simple block mechanics create near-infinite creative possibilities." },
"System Cohesion": { "quote": "How well different game systems work together thematically and mechanically. Dark Souls integrates stamina management across combat, exploration, and storytelling." },
"Complexity vs. Depth": { "quote": "Balancing rule simplicity against strategic richness. Go has extremely simple rules that produce extraordinary strategic depth." },
"Elegant Design": { "quote": "Creating maximum depth with minimum complexity. Tetris achieves profound depth through minimal, elegant mechanics." }
}
