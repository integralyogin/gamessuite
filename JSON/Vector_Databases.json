{
"Vector Basics": { "quote": "Vectors are mathematical representations of data points in high-dimensional space, enabling similarity search." },
"Embedding Models": { "quote": "Models like Word2Vec, BERT, and OpenAI embeddings convert raw data into vector representations." },
"Vector Similarity": { "quote": "Cosine similarity, Euclidean distance, and dot product measure relationships between vectors." },
"Dimensionality": { "quote": "High-dimensional vectors (768D, 1536D) capture complex data relationships in compact form." },
"Index Types": { "quote": "HNSW, IVF, LSH, and other algorithms optimize vector search in high dimensions." },
"HNSW Algorithm": { "quote": "Hierarchical Navigable Small World graphs enable efficient approximate nearest neighbor search." },
"IVF Index": { "quote": "Inverted File Index partitions vector space into clusters for faster search." },
"LSH Index": { "quote": "Locality-Sensitive Hashing reduces dimensions while preserving similarity relationships." },
"Distance Metrics": { "quote": "L2 (Euclidean), Inner Product, and Cosine Distance measure vector similarities differently." },
"Search Types": { "quote": "kNN search finds k nearest neighbors, range search finds all within a distance." },
"Vector Storage": { "quote": "Efficient storage formats and compression techniques optimize vector data management." },
"Query Processing": { "quote": "Query vectors are compared against indexed vectors using optimized algorithms." },
"Data Types": { "quote": "Text, images, audio, and other data can be converted to vector representations." },
"Scalability": { "quote": "Distributed architectures and sharding enable handling billions of vectors." },
"Performance": { "quote": "Trade-offs between search speed, accuracy, and memory usage guide index configuration." },
"Use Cases": { "quote": "Semantic search, recommendation systems, and similarity matching drive vector DB adoption." },
"Data Structures": { "quote": "Specialized structures like ball trees and VP trees organize vectors for efficient access." },
"Query Optimization": { "quote": "Techniques like quantization and pruning accelerate vector search operations." },
"Vector Operations": { "quote": "Addition, multiplication, and normalization transform vectors for specific needs." },
"Consistency": { "quote": "ACID properties and eventual consistency models ensure data reliability." },
"Durability": { "quote": "Persistence strategies and replication protect vector data from loss." },
"Updates": { "quote": "Dynamic index updates handle vector additions, deletions, and modifications." },
"Monitoring": { "quote": "Metrics for latency, throughput, and recall measure system performance." },
"Integration": { "quote": "APIs and connectors enable vector DB integration with existing systems." },
"Security": { "quote": "Access control and encryption protect vector data and operations." },
"Clustering": { "quote": "Vector clustering identifies patterns and groups in high-dimensional data." },
"Versioning": { "quote": "Vector and index versioning track changes and enable rollbacks." },
"Optimization": { "quote": "Hardware acceleration and cache strategies improve vector operations." },
"Analytics": { "quote": "Vector analytics extract insights from high-dimensional relationships." },
"Maintenance": { "quote": "Index rebuilding and optimization maintain search performance over time." }
}
