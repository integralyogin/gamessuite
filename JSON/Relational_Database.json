{
"Tables": { "quote": "The fundamental data structures that organize records into rows and columns. (Customer, Order, Product)" },
"Primary Keys": { "quote": "Unique identifiers for each record in a table. CustomerID uniquely identifies each customer record." },
"Foreign Keys": { "quote": "Fields that reference primary keys in other tables. OrderID in OrderDetails links to Orders table." },
"Relationships": { "quote": "Connections between tables based on related fields. One-to-many, many-to-many, and one-to-one relationships model real-world associations." },
"Normalization": { "quote": "Process of organizing data to reduce redundancy. Third normal form (3NF) ensures non-key attributes depend on the key, the whole key, and nothing but the key." },
"SQL": { "quote": "Structured Query Language used to interact with relational databases. SELECT * FROM Customers WHERE Region='WA';" },
"ACID Properties": { "quote": "Atomicity, Consistency, Isolation, Durability ensure reliable transaction processing." },
"Transactions": { "quote": "Units of work that must be completed entirely or not at all. BEGIN TRANSACTION; UPDATE Accounts; COMMIT;" },
"Indexes": { "quote": "Data structures that improve the speed of data retrieval operations. CREATE INDEX idx_lastname ON Customers(LastName);" },
"Views": { "quote": "Virtual tables based on the result-set of SQL statements. CREATE VIEW ActiveCustomers AS SELECT * FROM Customers WHERE Status='Active';" },
"Joins": { "quote": "Operations that combine rows from two or more tables. INNER JOIN, LEFT JOIN, RIGHT JOIN, FULL JOIN relate data across tables." },
"Constraints": { "quote": "Rules enforced on data columns to maintain accuracy and reliability. NOT NULL, UNIQUE, CHECK constraints ensure data quality." },
"Schema": { "quote": "Blueprint that describes the structure of the database. Tables, columns, relationships, and constraints define the logical schema." },
"Queries": { "quote": "Requests for data or information from a database. Complex queries may involve multiple tables, conditions, and aggregations." },
"Stored Procedures": { "quote": "Prepared SQL code that can be saved and reused. CALL CalculateOrderTotal(OrderID);" },
"Triggers": { "quote": "SQL code that automatically executes in response to certain database events. CREATE TRIGGER after_insert AFTER INSERT ON Orders FOR EACH ROW..." },
"Entity-Relationship Model": { "quote": "Diagram that illustrates relationships between entities in a database. Chen notation or crow's foot notation visually represent cardinality." },
"Concurrency Control": { "quote": "Mechanisms that manage simultaneous access to data. Locking, versioning, and isolation levels prevent data corruption." },
"Database Management System": { "quote": "Software that enables creating, querying, updating, and administering databases. MySQL, PostgreSQL, SQL Server, Oracle are popular RDBMSs." },
"Query Optimization": { "quote": "Process of improving query performance. Execution plans, index usage, and query rewriting enhance efficiency." },
"Data Integrity": { "quote": "Accuracy and consistency of data throughout its lifecycle. Entity, referential, and domain integrity constraints protect data validity." },
"Backup and Recovery": { "quote": "Procedures to protect data and restore database functionality after failures. Full, differential, and transaction log backups safeguard data." },
"Database Scaling": { "quote": "Strategies to handle increasing data volume and user load. Vertical scaling (bigger server) or horizontal scaling (more servers) accommodate growth." },
"Data Types": { "quote": "Attributes that specify the kind of data stored. INTEGER, VARCHAR, DATE, DECIMAL define the nature and constraints of column values." },
"Data Warehousing": { "quote": "System for reporting and data analysis across the organization. Star schema or snowflake schema organize data for analytical processing." },
"Partitioning": { "quote": "Division of large tables into smaller, more manageable pieces. PARTITION BY RANGE(OrderDate) improves performance for large datasets." },
"Sharding": { "quote": "Horizontal partitioning of data across multiple databases. Customer data might be distributed across shards based on geographic region." },
"Replication": { "quote": "Process of copying data from one database to one or more additional databases. Master-slave replication provides read scalability and fault tolerance." },
"Connection Pooling": { "quote": "Technique to reuse database connections. Reduces overhead of establishing new connections for each client request." },
"Data Migration": { "quote": "Process of transferring data between storage systems or database formats. ETL (Extract, Transform, Load) processes move data between environments." }
}
