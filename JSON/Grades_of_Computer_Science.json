{
"Computer Basics": { "quote": "Understanding hardware components: CPU processes instructions, RAM stores temporary data, Storage holds persistent data." },
"Digital Literacy": { "quote": "File management, basic software usage, and digital communication fundamentals." },
"Introduction to Programming": { "quote": "Basic syntax, variables, and control structures: if-else, loops, and functions." },
"Programming Fundamentals": { "quote": "Data types, arrays, strings, and basic algorithms: for(i=0; i<n; i++) implements iteration." },
"Object-Oriented Programming": { "quote": "Classes, objects, inheritance, and polymorphism: class Dog extends Animal implements basic OOP." },
"Data Structures": { "quote": "Arrays, linked lists, stacks, queues, trees, and graphs organize data efficiently." },
"Algorithms": { "quote": "Sorting, searching, and optimization: QuickSort O(n log n) average case complexity." },
"Algorithm Analysis": { "quote": "Big O notation, time/space complexity: O(1) constant, O(n) linear, O(n²) quadratic." },
"Database Systems": { "quote": "SQL, normalization, and ACID properties: SELECT * FROM table WHERE condition." },
"Web Development": { "quote": "HTML, CSS, JavaScript, and web frameworks: <div class='container'> structures content." },
"Software Engineering": { "quote": "Design patterns, testing, and development methodologies: MVC separates concerns." },
"Operating Systems": { "quote": "Process management, memory management, file systems: fork() creates new processes." },
"Computer Networks": { "quote": "TCP/IP, protocols, and network architecture: HTTP requests/responses enable web communication." },
"Computer Architecture": { "quote": "Assembly language, CPU design, memory hierarchy: CPU fetch-decode-execute cycle." },
"Systems Programming": { "quote": "Low-level programming, memory management: malloc() and free() manage memory." },
"Compiler Design": { "quote": "Lexical analysis, parsing, code generation: Tokens → AST → Machine Code." },
"Artificial Intelligence": { "quote": "Search algorithms, knowledge representation: A* search finds optimal paths." },
"Machine Learning": { "quote": "Supervised/unsupervised learning, neural networks: y = wx + b models linear regression." },
"Deep Learning": { "quote": "Neural network architectures, training methods: Backpropagation updates weights." },
"Computer Graphics": { "quote": "3D rendering, visualization, animation: Matrix transformations control object positions." },
"Computer Security": { "quote": "Cryptography, network security, secure coding: Public key encryption enables secure communication." },
"Distributed Systems": { "quote": "Parallel computing, distributed algorithms: MapReduce processes large datasets." },
"Cloud Computing": { "quote": "Virtualization, scalability, services: Containers isolate applications." },
"Internet of Things": { "quote": "Embedded systems, sensor networks: Microcontrollers interface with physical world." },
"Quantum Computing": { "quote": "Qubits, quantum algorithms: Superposition enables parallel computation." },
"Theory of Computation": { "quote": "Automata theory, computability: Turing machines model computation." },
"Software Architecture": { "quote": "System design, scalability patterns: Microservices decouple components." },
"Mobile Development": { "quote": "Android/iOS programming, mobile UX: Native apps optimize mobile experience." },
"Game Development": { "quote": "Game engines, physics simulation: Game loops manage state updates." },
"Human-Computer Interaction": { "quote": "UI/UX design, user research: User-centered design improves interfaces." }
}
