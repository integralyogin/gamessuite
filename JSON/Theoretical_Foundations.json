{
"Computability Theory": { "quote": "The study of which problems can be solved by algorithms: The halting problem proves some functions are not computable." },
"Automata Theory": { "quote": "Study of abstract machines: DFA, NFA, PDA, and Turing Machines form the hierarchy of computational power." },
"Formal Languages": { "quote": "Chomsky Hierarchy classifies languages: Regular, Context-Free, Context-Sensitive, and Recursively Enumerable." },
"Algorithm Analysis": { "quote": "Big O notation describes algorithmic efficiency: O(n) is linear time, O(1) is constant time." },
"Complexity Theory": { "quote": "P vs NP problem explores computational difficulty: NP-complete problems are believed to require exponential time." },
"Graph Theory": { "quote": "Study of nodes and edges: Euler's solution to the Königsberg bridge problem founded graph theory." },
"Information Theory": { "quote": "Shannon's entropy measures information content: H = -Σ p(x) log₂ p(x) quantifies uncertainty." },
"Logic Theory": { "quote": "Boolean algebra and predicate calculus: (p ∧ q) ∨ (¬p ∧ ¬q) expresses logical relationships." },
"Type Theory": { "quote": "Mathematical foundation for type systems: λ-calculus provides basis for functional programming." },
"Category Theory": { "quote": "Abstract algebra studying compositional structures: Functors map between categories preserving structure." },
"Recursion Theory": { "quote": "Study of recursive functions: The Y combinator enables anonymous recursion in λ-calculus." },
"Data Structures": { "quote": "Abstract data types and their implementations: Stack, Queue, Tree, Graph organize information." },
"Coding Theory": { "quote": "Error detection and correction: Hamming distance measures code word separation." },
"Quantum Computing": { "quote": "Quantum bits and quantum gates: Superposition and entanglement enable quantum parallelism." },
"Cryptography Theory": { "quote": "Security through mathematical problems: RSA security relies on prime factorization difficulty." },
"Computational Geometry": { "quote": "Algorithms for geometric problems: Convex hull, Voronoi diagrams, geometric search." },
"Parallel Computing": { "quote": "Concurrent execution theory: Amdahl's Law limits parallel speedup: S(n) = 1/((1-p) + p/n)." },
"Distributed Systems": { "quote": "CAP theorem states trade-offs: Consistency, Availability, Partition tolerance - choose two." },
"Game Theory": { "quote": "Strategic decision making: Nash equilibrium occurs when no player can unilaterally improve." },
"Machine Learning Theory": { "quote": "PAC learning framework: Probably Approximately Correct learning bounds error." },
"Approximation Theory": { "quote": "Solutions for intractable problems: PTAS provides (1+ε)-approximation for some ε > 0." },
"Network Theory": { "quote": "Study of interconnected systems: Small-world networks have low average path lengths." },
"Optimization Theory": { "quote": "Finding best solutions: Linear programming solves constrained optimization problems." },
"Compiler Theory": { "quote": "Language translation principles: Lexical, Syntactic, and Semantic analysis phases." },
"Concurrency Theory": { "quote": "Process interaction models: π-calculus models concurrent computations." },
"Formal Methods": { "quote": "Mathematical techniques for systems: Model checking verifies system properties." },
"Randomized Algorithms": { "quote": "Probability in computation: Monte Carlo vs Las Vegas algorithms differ in certainty." },
"Computer Architecture": { "quote": "Von Neumann architecture: Separation of program and data memory." },
"Theory of Databases": { "quote": "Relational algebra and normalization: ACID properties ensure transaction reliability." },
"Computational Biology": { "quote": "Algorithms for biological data: Smith-Waterman algorithm for sequence alignment." }
}
